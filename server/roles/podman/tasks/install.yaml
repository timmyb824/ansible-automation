---
- name: Download Podman repo Release.key
  ansible.builtin.get_url:
    url: "https://download.opensuse.org/repositories/devel:kubic:libcontainers:unstable/xUbuntu_{{ podman_ubuntu_series }}/Release.key"
    dest: /tmp/podman-release.key
    mode: "0644"
  become: true

- name: Convert Release.key to gpg keyring (dearmor, trusted.gpg.d)
  ansible.builtin.command: >
    gpg --dearmor -o /etc/apt/trusted.gpg.d/devel_kubic_libcontainers_unstable.gpg /tmp/podman-release.key
  args:
    creates: /etc/apt/trusted.gpg.d/devel_kubic_libcontainers_unstable.gpg
  become: true

- name: Add Podman Kubic repo (NO signed-by)
  ansible.builtin.apt_repository:
    repo: "deb http://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/unstable/xUbuntu_{{ podman_ubuntu_series }}/ /"
    filename: devel:kubic:libcontainers:unstable
    state: present
  become: true

- name: Podman | Install podman and plugins
  ansible.builtin.apt:
    name:
      - podman
      - podman-plugins
    state: present
    update_cache: true
  become: true

- name: Podman | Install podman-compose (if uv present)
  ansible.builtin.command: |
    export PATH="{{ ansible_user_dir }}/.local/bin:$PATH"
    uv tool install podman-compose
  args:
    creates: "/home/{{ podman_user }}/.local/bin/podman-compose"
  when: podman_compose_manage
  become: true
  become_user: "{{ podman_user }}"
  ignore_errors: true

- name: Ensure user containers config directory exists
  ansible.builtin.file:
    path: "/home/{{ podman_user }}/.config/containers"
    state: directory
    owner: "{{ podman_user }}"
    mode: "0755"
  become: true

- name: Podman | Copy registries.conf to user config
  ansible.builtin.copy:
    src: /etc/containers/registries.conf
    dest: "/home/{{ podman_user }}/.config/containers/registries.conf"
    owner: "{{ podman_user }}"
    mode: "0777"
    remote_src: true
  become: true

- name: Podman | Append search registries
  ansible.builtin.lineinfile:
    path: "/home/{{ podman_user }}/.config/containers/registries.conf"
    line: 'unqualified-search-registries = ["docker.io","quay.io","container-registry.oracle.com","ghcr.io","lscr.io"]'
    insertafter: EOF
    state: present
  become: true

- name: Podman | Enable lingering for user
  ansible.builtin.command: loginctl enable-linger {{ podman_user }}
  become: true
  ignore_errors: true

- name: Podman | Set privileged port sysctl
  ansible.builtin.copy:
    dest: /etc/sysctl.d/podman-privileged-ports.conf
    content: |
      # Lowering privileged ports to allow us to run rootless Podman containers on lower ports
      # From: www.smarthomebeginner.com
      net.ipv4.ip_unprivileged_port_start={{ podman_privileged_port }}
    owner: root
    group: root
    mode: "0644"
  become: true

- name: Podman | Apply sysctl config
  ansible.builtin.command: sysctl --load /etc/sysctl.d/podman-privileged-ports.conf
  become: true
  ignore_errors: true

- name: Podman | Create systemd user dir
  ansible.builtin.file:
    path: "/home/{{ podman_user }}/.config/systemd/user"
    state: directory
    owner: "{{ podman_user }}"
    mode: "0755"
  become: true

- name: Podman | Enable and start rootless podman.socket
  ansible.builtin.command: systemctl --user enable --now podman.socket
  become: false
  ignore_errors: true

- name: Podman | Enable and start root podman.socket
  ansible.builtin.command: sudo systemctl enable --now podman.socket
  become: true
  ignore_errors: true

- name: Podman | Optionally symlink podman to docker
  ansible.builtin.file:
    src: /run/podman/podman.sock
    dest: /var/run/docker.sock
    state: link
    force: false
  when: podman_symlink_docker
  become: true
  ignore_errors: true
