---
- name: Check system compatibility for Homebrew
  ansible.builtin.debug:
    msg: "Homebrew installation will be skipped - {{ ansible_os_family }} is not supported (only Darwin/macOS is supported)"
  when: ansible_os_family != 'Darwin'

- name: Install and configure Homebrew
  when: ansible_os_family == 'Darwin'
  block:
    - name: Check if Homebrew is installed
      ansible.builtin.command: which brew
      register: brew_check
      changed_when: false
      failed_when: false

    - name: Install Homebrew
      ansible.builtin.shell: |
        /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
      when: brew_check.rc != 0

    - name: Initialize Homebrew environment
      ansible.builtin.shell: eval "$(/opt/homebrew/bin/brew shellenv)" && echo $PATH
      register: brew_env
      changed_when: false

    - name: Fetch package list from gist
      become: false
      ansible.builtin.uri:
        url: "{{ gist_base_url }}/Brewfile"
        return_content: true
        validate_certs: true
        method: GET
      register: package_list
      delegate_to: localhost
      run_once: true
      when: homebrew_state != 'absent'

    - name: Create temporary Brewfile
      ansible.builtin.copy:
        content: "{{ package_list.content }}"
        dest: "/tmp/Brewfile"
      when: homebrew_state != 'absent'

    - name: Install packages from Brewfile
      ansible.builtin.shell: |
        eval "$(/opt/homebrew/bin/brew shellenv)"
        brew bundle install --file=/tmp/Brewfile --verbose
      register: brew_bundle
      changed_when: brew_bundle.stdout != ''
      failed_when: false
      when: homebrew_state != 'absent'

    - name: Display Brewfile installation output
      ansible.builtin.debug:
        msg: |
          Some packages failed to install:
          {{ brew_bundle.stderr }}

          Successfully used/installed:
          {{ brew_bundle.stdout }}
      when:
        - homebrew_state != 'absent'
        - brew_bundle is defined

    - name: Install Mac App Store CLI
      ansible.builtin.shell: |
        eval "$(/opt/homebrew/bin/brew shellenv)"
        brew install mas
      register: mas_install
      changed_when: "'Installing' in mas_install.stdout"
      failed_when:
        - mas_install.rc != 0
        - "'already installed' not in mas_install.stderr"
      when:
        - homebrew_state != 'absent'
        - install_mas | bool

    - name: Install Slack from Mac App Store
      ansible.builtin.command: mas install 803453959
      register: slack_install
      changed_when: "'Already installed' not in slack_install.stderr"
      failed_when:
        - slack_install.rc != 0
        - "'Already installed' not in slack_install.stderr"
      when:
        - homebrew_state != 'absent'
        - install_mas | bool
        - install_slack | bool

    - name: Cleanup temporary Brewfile
      ansible.builtin.file:
        path: "/tmp/Brewfile"
        state: absent
      when: homebrew_state != 'absent'
