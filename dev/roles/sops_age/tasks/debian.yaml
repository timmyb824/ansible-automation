---
# Install tasks
- name: Check if sops is installed
  ansible.builtin.command: which sops
  register: sops_check
  changed_when: false
  failed_when: false
  when: sops_state == "present"

- name: Check if age is installed
  ansible.builtin.command: which age
  register: age_check
  changed_when: false
  failed_when: false
  when: age_state == "present"

- name: Download sops binary
  when: sops_state == "present" and sops_check.rc != 0
  ansible.builtin.get_url:
    url: "https://github.com/mozilla/sops/releases/download/{{ sops_version }}/sops-{{ sops_version }}.linux.amd64"
    dest: "/tmp/sops-{{ sops_version }}.linux.amd64"
    mode: "0644"

- name: Install sops binary
  when: sops_state == "present" and sops_check.rc != 0
  ansible.builtin.copy:
    src: "/tmp/sops-{{ sops_version }}.linux.amd64"
    dest: "/usr/local/bin/sops"
    mode: "0755"
    remote_src: yes
  become: true

- name: Download age binary
  when: age_state == "present" and age_check.rc != 0
  ansible.builtin.get_url:
    url: "https://github.com/FiloSottile/age/releases/download/{{ age_version }}/age-{{ age_version }}-linux-amd64.tar.gz"
    dest: "/tmp/age-{{ age_version }}-linux-amd64.tar.gz"
    mode: "0644"

- name: Extract age archive
  when: age_state == "present" and age_check.rc != 0
  ansible.builtin.unarchive:
    src: "/tmp/age-{{ age_version }}-linux-amd64.tar.gz"
    dest: /tmp
    remote_src: yes

- name: Install age binary
  when: age_state == "present" and age_check.rc != 0
  ansible.builtin.copy:
    src: "/tmp/age/age"
    dest: "/usr/local/bin/age"
    mode: "0755"
    remote_src: yes
  become: true

# Uninstall tasks
- name: Check if sops exists
  ansible.builtin.stat:
    path: "/usr/local/bin/sops"
  register: sops_binary
  when: sops_state == "absent"

- name: Remove sops binary
  ansible.builtin.file:
    path: "/usr/local/bin/sops"
    state: absent
  become: true
  when: sops_state == "absent" and sops_binary.stat.exists | default(false)

- name: Check if age exists
  ansible.builtin.stat:
    path: "/usr/local/bin/age"
  register: age_binary
  when: age_state == "absent"

- name: Remove age binary
  ansible.builtin.file:
    path: "/usr/local/bin/age"
    state: absent
  become: true
  when: age_state == "absent" and age_binary.stat.exists | default(false)

# Cleanup tasks
- name: Clean up temporary files
  ansible.builtin.file:
    path: "{{ item }}"
    state: absent
  with_items:
    - "/tmp/sops-{{ sops_version }}.linux.amd64"
    - "/tmp/age-{{ age_version }}-linux-amd64.tar.gz"
    - "/tmp/age"
