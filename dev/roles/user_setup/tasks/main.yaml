---
# - name: Check if users exist
#   ansible.builtin.getent:
#     database: passwd
#     key: "{{ item }}"
#   loop:
#     - "{{ local_user }}"
#     - "{{ ssh_remote_user }}"
#   register: user_check
#   ignore_errors: true

# cleaner message
- name: Check if users exist
  ansible.builtin.command: "id {{ item }}"
  loop:
    - "{{ local_user }}"
    - "{{ ssh_remote_user }}"
  register: user_check
  failed_when: false
  changed_when: false

- name: Create users
  ansible.builtin.user:
    name: "{{ item }}"
    password: "{{ user_password | password_hash('sha512') }}" # Removed explicit salt
    shell: /bin/bash
    groups: sudo
    append: true
    create_home: true
    state: present
  loop:
    - "{{ local_user }}"
    - "{{ ssh_remote_user }}"
  become: true

- name: Ensure .ssh directory exists
  ansible.builtin.file:
    path: "/home/{{ item }}/.ssh"
    state: directory
    mode: "0700"
    owner: "{{ item }}"
    group: "{{ item }}"
  loop:
    - "{{ local_user }}"
    - "{{ ssh_remote_user }}"
  become: true
  when: item != ""

- name: Add SSH key
  ansible.builtin.copy:
    content: "{{ ssh_key_contents }}"
    dest: "/home/{{ item }}/.ssh/authorized_keys"
    mode: "0600"
    owner: "{{ item }}"
    group: "{{ item }}"
  loop:
    - "{{ local_user }}"
    - "{{ ssh_remote_user }}"
  become: true
  when: item != "" and ssh_key_contents != ""

- name: Create sudoers file for remote user
  ansible.builtin.copy:
    content: "{{ ssh_remote_user }} ALL=(ALL) NOPASSWD: ALL"
    dest: "/etc/sudoers.d/{{ ssh_remote_user }}"
    mode: "0440"
    validate: "visudo -cf %s"
  when: ssh_remote_user != ""
  become: true
