---
- name: Verify running user
  ansible.builtin.command: whoami
  register: running_user
  changed_when: false

- name: Debug current user and environment
  ansible.builtin.debug:
    msg:
      - "Current user: {{ running_user.stdout }}"
      - "Home directory: {{ ansible_env.HOME }}"
      - "Effective user ID: {{ ansible_effective_user_id }}"

- name: Fail if not running as tbryant
  ansible.builtin.fail:
    msg: "This role must be run as tbryant (current user: {{ running_user.stdout }})"
  when: running_user.stdout != 'tbryant'

- name: Check if git is installed
  ansible.builtin.command: which git
  register: git_check
  failed_when: false
  changed_when: false

- name: Proceed with basher installation
  block:
    - name: Check if basher is installed
      ansible.builtin.stat:
        path: "{{ ansible_env.HOME }}/.basher"
      register: basher_check

    - name: Clone basher repository
      ansible.builtin.git:
        repo: https://github.com/basherpm/basher.git
        dest: "{{ ansible_env.HOME }}/.basher"
        depth: 1
      when: not basher_check.stat.exists
      register: basher_clone
      ignore_errors: true

    - name: Add basher to PATH in .bashrc
      ansible.builtin.lineinfile:
        path: "{{ ansible_env.HOME }}/.bashrc"
        line: 'export PATH="{{ ansible_env.HOME }}/.basher/bin:$PATH"'
        state: present
      when: basher_check.stat.exists or (basher_clone is defined and not basher_clone.failed)

    - name: Fetch basher package list from gist
      ansible.builtin.uri:
        url: "https://gist.githubusercontent.com/timmyb824/807597f33b14eceeb26e4e6f81d45962/raw/basher.list"
        return_content: true
        validate_certs: true
        method: GET
      register: package_list
      delegate_to: localhost
      run_once: true
      ignore_errors: true

    - name: Parse package list
      ansible.builtin.set_fact:
        basher_packages: "{{ package_list.content | regex_replace('#.*$', '') | split('\n') | select('regex', '^\\S+$') | list }}"
      when: package_list is success

    - name: Install basher packages
      ansible.builtin.command: "{{ ansible_env.HOME }}/.basher/bin/basher install {{ item }}"
      loop: "{{ basher_packages | default([]) }}"
      register: basher_install
      changed_when: "'Already installed' not in basher_install.stderr"
      failed_when: false
      ignore_errors: true

    - name: Log successful installations
      ansible.builtin.debug:
        msg: "Successfully installed packages: {{ item.item }}"
      loop: "{{ basher_install.results }}"
      when:
        - basher_install is defined
        - item.rc == 0

    - name: Log failed installations
      ansible.builtin.debug:
        msg: "Failed to install package: {{ item.item }} (Error: {{ item.stderr }})"
      loop: "{{ basher_install.results }}"
      when:
        - basher_install is defined
        - item.rc != 0
        - "'Already installed' not in item.stderr"
  when: git_check.rc == 0 # This when condition applies to the entire block
