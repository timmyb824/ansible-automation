---
- name: Check system compatibility for Homebrew
  ansible.builtin.debug:
    msg: "Homebrew installation will be skipped - {{ ansible_os_family }} is not supported (only Darwin/macOS is supported)"
  when: ansible_os_family != 'Darwin'

- name: Install and configure Homebrew
  when: ansible_os_family == 'Darwin'
  block:
    - name: Check if Homebrew is installed
      ansible.builtin.command: which brew
      register: brew_check
      changed_when: false
      failed_when: false

    - name: Install Homebrew
      ansible.builtin.shell: |
        /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
      when: brew_check.rc != 0

    # - name: Add Homebrew to PATH for Intel Macs
    #   ansible.builtin.lineinfile:
    #     path: "{{ ansible_env.HOME }}/.zshrc"
    #     line: 'export PATH="/usr/local/bin:$PATH"'
    #     state: present
    #   when:
    #     - ansible_architecture != "arm64"
    #     - ansible_os_family == "Darwin"

    # - name: Add Homebrew to PATH for Apple Silicon Macs
    #   ansible.builtin.lineinfile:
    #     path: "{{ ansible_env.HOME }}/.zshrc"
    #     line: 'export PATH="/opt/homebrew/bin:$PATH"'
    #     state: present
    #   when:
    #     - ansible_architecture == "arm64"
    #     - ansible_os_family == "Darwin"

    # - name: Remove legacy commands
    #   ansible.builtin.file:
    #     path: "{{ item }}"
    #     state: absent
    #   loop:
    #     - /usr/local/bin/op
    #   when: homebrew_state != 'absent'

    - name: Fetch package list from gist
      become: false
      ansible.builtin.uri:
        url: "{{ gist_base_url }}/Brewfile"
        return_content: yes
        validate_certs: yes
        method: GET
      register: package_list
      delegate_to: localhost
      run_once: true
      when: homebrew_state != 'absent'

    - name: Create temporary Brewfile
      ansible.builtin.copy:
        content: "{{ package_list.content }}"
        dest: "/tmp/Brewfile"
      when: homebrew_state != 'absent'

    - name: Install packages from Brewfile
      community.general.homebrew:
        name: "{{ item }}"
        state: present
      # loop: "{{ package_list.content | regex_replace('#.*$', '') | split('\n') | select('regex', '^\\S+$') | list }}"
      loop: "{{ package_list.content.split('\n') | map('trim') | reject('search', '^#') | map('split', '#') | map('first') | map('trim') | reject('equalto', '') | list }}"
      when: homebrew_state != 'absent'

    - name: Install Mac App Store CLI
      community.general.homebrew:
        name: mas
        state: present
      when:
        - homebrew_state != 'absent'
        - install_mas | bool

    - name: Install Slack from Mac App Store
      ansible.builtin.command: mas install 803453959
      register: slack_install
      changed_when: "'Already installed' not in slack_install.stderr"
      failed_when:
        - slack_install.rc != 0
        - "'Already installed' not in slack_install.stderr"
      when:
        - homebrew_state != 'absent'
        - install_mas | bool
        - install_slack | bool

    - name: Cleanup temporary Brewfile
      ansible.builtin.file:
        path: "/tmp/Brewfile"
        state: absent
      when: homebrew_state != 'absent'
