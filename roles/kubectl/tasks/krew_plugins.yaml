---
- name: Set krew environment
  ansible.builtin.set_fact:
    krew_env:
      PATH: "{{ ansible_env.HOME }}/.krew/bin:{{ ansible_env.PATH }}"

- name: Verify krew is available
  ansible.builtin.shell: kubectl krew
  environment: "{{ krew_env }}"
  register: krew_verify
  changed_when: false
  failed_when: false

- name: Fetch package list from gist
  ansible.builtin.uri:
    url: "{{ gist_base_url }}/krew.list"
    return_content: yes
  register: package_list
  delegate_to: localhost
  run_once: true

- name: Parse package list
  ansible.builtin.set_fact:
    krew_plugins: "{{ package_list.content | regex_replace('#.*$', '') | split('\n') | select('regex', '^\\S+$') | list }}"

- name: Get list of installed krew plugins
  ansible.builtin.command: kubectl krew list
  environment: "{{ krew_env }}"
  register: installed_plugins
  changed_when: false
  failed_when: false

- name: Install krew plugins
  ansible.builtin.command: "kubectl krew install {{ item }}"
  environment: "{{ krew_env }}"
  register: krew_install
  changed_when: krew_install.rc == 0
  failed_when:
    - krew_install.rc != 0
    - "'already installed' not in krew_install.stderr"
    - "'does not offer installation for this platform' not in krew_install.stderr"
  loop: "{{ krew_plugins }}"
  when:
    - item | trim != ''
    - item not in (installed_plugins.stdout_lines | default([]))

- name: Update krew plugins
  ansible.builtin.command: kubectl krew upgrade
  environment: "{{ krew_env }}"
  when: krew_plugins_state == 'latest'
  register: krew_upgrade
  changed_when: "'Upgrading' in krew_upgrade.stdout"
