---
- name: Check if Micro editor is installed
  ansible.builtin.command: which micro
  register: micro_check
  changed_when: false
  failed_when: false

- name: Fail if Micro editor is not installed
  ansible.builtin.fail:
    msg: "Micro editor is not installed. Please ensure it's installed via Homebrew (macOS) or apt (Linux)."
  when: micro_check.rc != 0

- name: Fetch package list from gist
  become: false
  ansible.builtin.uri:
    url: "{{ gist_base_url }}/micro_plugins.list"
    return_content: yes
    validate_certs: yes
    method: GET
  register: package_list
  delegate_to: localhost
  run_once: true

- name: Parse package list
  become: false
  ansible.builtin.set_fact:
    micro_plugins: "{{ package_list.content | regex_replace('#.*$', '') | split('\n') | select('regex', '^\\S+$') | list }}"

- name: Get list of installed plugins
  ansible.builtin.command: micro -plugin list
  register: installed_plugins
  changed_when: false

- name: Install Micro plugins
  ansible.builtin.command: "micro -plugin install {{ item }}"
  register: plugin_install
  changed_when: plugin_install.rc == 0
  failed_when:
    - plugin_install.rc != 0
    - "'already installed' not in plugin_install.stderr"
  loop: "{{ micro_plugins }}"
  when:
    - item | trim != ''
    - item not in installed_plugins.stdout
    - micro_plugins_state != 'absent'

- name: Update Micro plugins
  ansible.builtin.command: "micro -plugin update {{ item }}"
  register: plugin_update
  changed_when: plugin_update.rc == 0
  failed_when:
    - plugin_update.rc != 0
    - "'up to date' not in plugin_update.stderr"
  loop: "{{ micro_plugins }}"
  when:
    - item | trim != ''
    - item in installed_plugins.stdout
    - micro_plugins_state == 'latest'
